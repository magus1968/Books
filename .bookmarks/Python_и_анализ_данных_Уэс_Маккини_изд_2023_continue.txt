стр. 32	Установка необходимых пакетов - вернуться
стр. 33	Интегрированные среды разработки - интересно
	стр. 35	Чтобы при выполнении примеров результаты выглядели так же, как в книге
		Данные для примеров	https://wesmckinney.com/book/preliminaries
	стр. 45	Интроспекция: завершение TAB (стр. 44), ? -- после переменной --- АФИГЕТЬ
стр. 50	Утиная типизация iter - поддержка итерирования
стр. 51	Импорт функции или переменной из другого файла в том же каталоге
стр. 52	Бинарные операторы. Вообще интересно/полезно a ^ b; a is b
стр. 59	Дата и время
стр. 61	if, elif, else
стр. 62	Циклы for; continue, break
	Циклы while
стр. 63	pass
стр. 66	Функция tuple - преобразование в кортеж
стр. 68	Синтаксис *rest
	Метод .count
стр. 69	Методы .append, .insert, .pop, .remove, extend. Ключевое слово in для проверки наличия значения
стр. 70	Метод .sort по ключу + стр. 87
стр. 71	Срезы
стр. 72	Словарь dict
стр. 73	del, pop
стр. 74	Методы keys, values, update
стр. 75	Метод get, setdefault, Модуль collections, Классс defaultdict
76	Функция hash. Создание множества set. Объединение множества - метод union (|)
77	Метод intersection (&) - пересечение множеств
79	* Функция enumerate - возвращает последовательность кортежей (i, value) - как index += 1
79	Функция sorted - и со строковыми словами тоже
79	Функция zip - сшивает элементы нескольких списков
80	Функция reversed перебирает элементы в обратном порядке
80	*** Списковое, словарное и множественное включения
82	Функции. стр. 83 - функции с факультативным аргументом (по умолчанию)
83-84	Результаты расположения нулевого списка - внутри (обнуляет) или снаружи функции (добавляет)
85-86	* import re - возможно полезно для практики 9 модуля. Функция map (была ещё на стр. 81)
87	lambda - анонимные (лямбда-) функции
87	Генераторы yield


Продолжить:
стр. 87 	Генераторы






























